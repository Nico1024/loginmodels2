// <auto-generated />
using System;
using Loginnmodels2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Loginnmodels2.Migrations
{
    [DbContext(typeof(dbcontext1))]
    partial class dbcontext1ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Loginnmodels2.Data.Case", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("database_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_valid")
                        .HasColumnType("bit");

                    b.HasKey("Name");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("Loginnmodels2.Data.CaseMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ParentCaseName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ParentCaseName");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Loginnmodels2.Data.MenuPages", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<bool>("is_single_page")
                        .HasColumnType("bit");

                    b.HasKey("Name");

                    b.HasIndex("ParentMenuId");

                    b.ToTable("MenuElements");
                });

            modelBuilder.Entity("Loginnmodels2.Data.Pages", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CaseMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaseName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MenuPagesName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CaseMenuId");

                    b.HasIndex("CaseName");

                    b.HasIndex("MenuPagesName");

                    b.ToTable("Paginas");
                });

            modelBuilder.Entity("Loginnmodels2.Data.User", b =>
                {
                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("user_name");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Loginnmodels2.Data.UserHasCases", b =>
                {
                    b.Property<long>("int_counter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("connected_caseName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("usruser_name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("int_counter");

                    b.HasIndex("connected_caseName");

                    b.HasIndex("usruser_name");

                    b.ToTable("UserCaseRelation");
                });

            modelBuilder.Entity("Loginnmodels2.Data.CaseMenu", b =>
                {
                    b.HasOne("Loginnmodels2.Data.Case", "ParentCase")
                        .WithMany()
                        .HasForeignKey("ParentCaseName");
                });

            modelBuilder.Entity("Loginnmodels2.Data.MenuPages", b =>
                {
                    b.HasOne("Loginnmodels2.Data.CaseMenu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuId");
                });

            modelBuilder.Entity("Loginnmodels2.Data.Pages", b =>
                {
                    b.HasOne("Loginnmodels2.Data.CaseMenu", null)
                        .WithMany("Paginas")
                        .HasForeignKey("CaseMenuId");

                    b.HasOne("Loginnmodels2.Data.Case", null)
                        .WithMany("ListOf_Pages")
                        .HasForeignKey("CaseName");

                    b.HasOne("Loginnmodels2.Data.MenuPages", null)
                        .WithMany("Paginas")
                        .HasForeignKey("MenuPagesName");
                });

            modelBuilder.Entity("Loginnmodels2.Data.UserHasCases", b =>
                {
                    b.HasOne("Loginnmodels2.Data.Case", "connected_case")
                        .WithMany()
                        .HasForeignKey("connected_caseName");

                    b.HasOne("Loginnmodels2.Data.User", "usr")
                        .WithMany()
                        .HasForeignKey("usruser_name");
                });
#pragma warning restore 612, 618
        }
    }
}
